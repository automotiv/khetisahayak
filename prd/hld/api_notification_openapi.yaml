openapi: 3.0.3
info:
  title: Kheti Sahayak - Notification Service API
  description: |-
    This document defines the RESTful API endpoints for the Notification Service in the Kheti Sahayak platform.
    It supports sending notifications, retrieving history, and managing user-specific notification preferences as per the `notifications.md` PRD.
  version: "1.1.0"
  contact:
    name: Backend/API Lead
    email: backend-lead@khetisahayak.com

servers:
  - url: https://api.khetisahayak.com/v1
    description: Production Server
  - url: https://api.staging.khetisahayak.com/v1
    description: Staging Server

tags:
  - name: User Notifications
    description: Operations related to user-specific notifications and preferences.
  - name: Admin
    description: Administrative operations for notifications.

paths:
  /notifications/settings:
    get:
      tags:
        - User Notifications
      summary: Get user notification settings
      description: Retrieves the notification preferences for the authenticated user.
      operationId: getNotificationSettings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved notification settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      tags:
        - User Notifications
      summary: Update user notification settings
      description: Updates the notification preferences for the authenticated user. The entire settings object must be provided.
      operationId: updateNotificationSettings
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettings'
      responses:
        '200':
          description: Notification settings updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettings'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /notifications/send:
    post:
      tags:
        - User Notifications
      summary: Send a notification
      description: Sends a notification to one or more specified users. Typically used by other backend services.
      operationId: sendNotification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNotificationRequest'
      responses:
        '200':
          description: Notification has been queued for sending.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendNotificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /notifications/history:
    get:
      tags:
        - User Notifications
      summary: Get notification history
      description: Retrieves the notification history for the authenticated user.
      operationId: getNotificationHistory
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          description: Filter by notification type.
          required: false
          schema:
            type: string
            enum: [sms, email, push, in-app]
      responses:
        '200':
          description: A list of notifications for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationHistoryItem'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /notifications/broadcast:
    post:
      tags:
        - Admin
      summary: Broadcast a notification (Admin only)
      description: Sends a broadcast notification to all users or a specific segment. Requires admin privileges.
      operationId: broadcastNotification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastRequest'
      responses:
        '202':
          description: Broadcast request accepted and is being processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: broadcast_queued
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "OAuth2 JWT token"

  responses:
    BadRequestError:
      description: Bad Request - The request was improperly formatted or contained invalid fields.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized - The request requires user authentication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenError:
      description: Forbidden - The authenticated user does not have permission to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    NotificationSettings:
      type: object
      description: "Defines the user's notification preferences, mirroring the PRD."
      properties:
        weatherAlerts:
          type: boolean
          description: "Toggle for severe weather alerts."
        governmentSchemes:
          type: object
          properties:
            newSchemes:
              type: boolean
            applicationDeadlines:
              type: boolean
        marketplace:
          type: object
          properties:
            orderUpdates:
              type: boolean
            newMessages:
              type: boolean
        sharingPlatform:
          type: object
          properties:
            bookingUpdates:
              type: boolean
            reminders:
              type: boolean
        expertConnect:
          type: object
          properties:
            newMessages:
              type: boolean
            appointmentReminders:
              type: boolean
        communityForum:
          type: object
          properties:
            repliesToMyPosts:
              type: boolean
            mentions:
              type: boolean
        newsAndContent:
          type: object
          properties:
            newEducationalContent:
              type: boolean
            platformAnnouncements:
              type: boolean

    SendNotificationRequest:
      type: object
      properties:
        recipient_ids:
          type: array
          items:
            type: string
          example: ["user_001", "user_002"]
        type:
          type: string
          enum: [sms, email, push]
        subject:
          type: string
          example: "Market Update"
        message:
          type: string
          example: "Wheat prices up 5% in Pune market."
        data:
          type: object
          description: "Optional data for deep links or context."
          properties:
            deep_link:
              type: string
              example: "/marketplace/listing/123"

    SendNotificationResponse:
      type: object
      properties:
        status:
          type: string
          example: "sent"
        notification_ids:
          type: array
          items:
            type: string
          example: ["notif_001", "notif_002"]

    NotificationHistoryItem:
      type: object
      properties:
        notification_id:
          type: string
        type:
          type: string
          enum: [sms, email, push, in-app]
        subject:
          type: string
        message:
          type: string
        status:
          type: string
          enum: [sent, delivered, failed, read]
        sent_at:
          type: string
          format: date-time

    BroadcastRequest:
      type: object
      properties:
        segment:
          type: string
          example: "all_farmers"
        type:
          type: string
          enum: [push, in-app]
        subject:
          type: string
          example: "App Update Available"
        message:
          type: string
          example: "A new version of Kheti Sahayak is available with exciting new features!"

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string