services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: kheti-postgres
    environment:
      POSTGRES_DB: kheti_sahayak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./kheti_sahayak_spring_boot/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - kheti-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kheti-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kheti-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./kheti_sahayak_spring_boot
      dockerfile: Dockerfile
    container_name: kheti-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: kheti_sahayak
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: khetisahayak-agricultural-platform-jwt-secret-key-for-farmer-authentication
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kheti-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kheti-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - kheti-network

  # Adminer (Database Admin Tool)
  adminer:
    image: adminer:latest
    container_name: kheti-adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - kheti-network

  # Redis Commander (Redis Admin Tool)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: kheti-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - kheti-network

volumes:
  postgres_data:
  redis_data:

networks:
  kheti-network:
    driver: bridge